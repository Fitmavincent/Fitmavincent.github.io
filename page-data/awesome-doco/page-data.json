{"componentChunkName":"component---src-templates-blog-post-js","path":"/awesome-doco/","result":{"data":{"site":{"siteMetadata":{"title":"Vince"}},"markdownRemark":{"id":"1e30d181-24d5-5661-aceb-27a35ed45882","excerpt":"An very awesome experience of integrating a IPN service Intro Have you ever felt that only raising two middle finger and swearing the F words isn’t really…","html":"<h1>An very awesome experience of integrating a IPN service</h1>\n<h2>Intro</h2>\n<p>Have you ever felt that only raising two middle finger and swearing the <strong>F</strong> words isn’t really enough to express the calm and peace in your heart?</p>\n<p>To be more specific…, you know what, just give a glimpse.</p>\n<h2>TL;DR</h2>\n<p>Enjoy:</p>\n<p><img src=\"/d9efbca20e97efe9e01dde29647e5fe4/notversion.png\" alt=\"Not Version\"></p>\n<p><img src=\"/13691410a61c97334da9e79a8529b2be/double-custom.png\" alt=\"Doulbe Custom\"></p>\n<p><img src=\"/11a7ce279ed2b4ffb56c2d3432d39509/good-date.png\" alt=\"Good Date\"></p>\n<blockquote>\n<p>I have to say, never seen a documents are beautifully composed, accurate and consistent.</p>\n</blockquote>\n<hr>\n<h2>What Happened</h2>\n<p>Lately, I’ve been tasked to work on an Instant Payment Notification with a service that my company is using. Having read through their document, the first thing I do is to map all the properties in their payload.</p>\n<p>I thought the implementation should be smooth and nice given that I got 99% of the information from the doco. However, the nightmare only begins from me uploading the endpoint to their IPN listener entry.</p>\n<p>At first, it starts giving me an Invalid error of my URL, which I tested it is healthy. <img src=\"/56bdd14b3caee02f465051653c36fcd0/invalid.png\" alt=\"Invalid url\"></p>\n<p>I scratched my head of not knowing what goes wrong. Therefore I contacted their support. Funny thing is, even the support guy doesn’t know what goes wrong and I kept giving him a hint whether their <code class=\"language-text\">Upload</code> method has some sort of check. After pulling another colleague of his to confirm there’s a dummy test to my endpoint.</p>\n<p>Brilliant!!! Such a good idea. Ok, fine. So I went back to see what goes wrong for my endpoint. Upon checking on logs, realize all my properties are <code class=\"language-text\">null</code>. So, what did I do wrong? Kept digging around my code to find out what went wrong. Local <strong>Postman</strong> to call and debug couldn’t find out what goes wrong.</p>\n<p>Then I decided to pull out a Http Request Logging middleware, checking the incoming raw request.</p>\n<p>Ha, found out that there’s a hidden property not listed in the document called <code class=\"language-text\">test_ipn_connection</code> which sent with the dummy test call. No wonder all my properties are null.</p>\n<p>Then, the rest are just good find over the lengthy log checking and digging. I have to say, never seen a documents are beautifully composed, accurate and consistent.</p>","frontmatter":{"title":"AWESOME Doco","date":"July 28, 2021","description":"Awesome documentation from an IPN service"}}},"pageContext":{"slug":"/awesome-doco/","previous":{"fields":{"slug":"/aws-cdk-azure-pipeline/"},"frontmatter":{"title":"AWS CDK Azure Pipeline"}},"next":{"fields":{"slug":"/powershell-batch-rename/"},"frontmatter":{"title":"Powershell Batch Rename"}}}},"staticQueryHashes":["148235104","2841359383","3544064463"],"slicesMap":{}}